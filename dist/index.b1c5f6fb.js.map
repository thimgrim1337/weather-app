{"mappings":"AAAA,wCAAwC;AACxC,wCAAwC;AACxC,uCAAuC;AACvC,8CAA8C;AAE9C,MAAM,OAAO;AACb,IAAI,aAAa,KAAK,EACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAsEC","sources":["src/modules/index.js"],"sourcesContent":["// import format from 'date-fns/format';\n// import { pl } from 'date-fns/locale';\n// import { parseISO } from 'date-fns';\n// import getWeather from './modules/Weather';\n\nconst city = 'Plock';\nlet isMeasureF = false;\n/* \nconst getDay = (date, pattern) => format(date, pattern, { locale: pl });\nconst getTemp = (tempC) => (isMeasureF === true ? tempC * 2 : tempC);\n\nconst renderCurrentWeather = ({ current, location }) => {\n  const weatherIconImg = document.querySelector('.weather-icon--big');\n  const currentTemp = document.querySelector('.weather-details__temp');\n  const currentChanceRain = document.querySelector('.weather-details__rain');\n  const currentHumidity = document.querySelector('.weather-details__humidity');\n  const currentWindSpeed = document.querySelector('.weather-details__wind');\n  const currentCity = document.querySelector('.current-day-info__city');\n  const currentDate = document.querySelector('.current-day-info__datetime');\n  const currentCondition = document.querySelector(\n    '.current-day-info__condition'\n  );\n\n  weatherIconImg.src = current.weatherIcon;\n  currentTemp.innerText = Math.round(getTemp(current.tempC));\n  currentChanceRain.innerText = `${current.chanceOfRain}%`;\n  currentHumidity.innerText = `${current.humidity}%`;\n  currentWindSpeed.innerText = `${Math.trunc(current.windKph)} km/h`;\n  currentCity.innerText = location.name;\n  currentDate.innerText = getDay(current.localtime, 'eeee');\n  currentCondition.innerText = current.text;\n};\n\nconst createDay = (dayData) => {\n  const day = document.createElement('div');\n  const dayName = document.createElement('h2');\n  const img = document.createElement('img');\n  const temps = document.createElement('div');\n  const maxTemp = document.createElement('p');\n  const minTemp = document.createElement('p');\n\n  day.className = 'forecast__day';\n  dayName.className = 'forecast__title';\n  dayName.innerText = getDay(parseISO(dayData.date), 'eeeeee');\n  img.className = 'forecast__weather-icon weather-icon weather-icon--small';\n  img.src = dayData.weatherIcon;\n  temps.className = 'forecast__temps';\n  maxTemp.classList = 'forecast__temp temp';\n  maxTemp.innerText = Math.round(dayData.maxTempC);\n  minTemp.classList = 'forecast__temp temp temp--min';\n  minTemp.innerText = Math.round(dayData.minTempC);\n\n  temps.append(maxTemp, minTemp);\n  day.append(dayName, img, temps);\n\n  return day;\n};\n\nconst renderDailyWeather = ({ daily }) => {\n  const forecast = document.querySelector('.weather-app__forecast');\n\n  daily.forEach((day) => {\n    forecast.appendChild(createDay(day));\n  });\n};\n\nconst measureF = document.querySelector('.measure-f');\nmeasureF.addEventListener('click', () => {\n  isMeasureF = true;\n});\n\nconst renderWeather = (async () => {\n  const weather = await getWeather(city);\n  console.log(weather);\n  renderCurrentWeather(weather);\n  renderDailyWeather(weather);\n})();\n */\n"],"names":[],"version":3,"file":"index.b1c5f6fb.js.map","sourceRoot":"/__parcel_source_root/"}